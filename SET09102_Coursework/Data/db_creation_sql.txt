DROP TABLE IF EXISTS settings;
DROP TABLE IF EXISTS setting_type;
DROP TABLE IF EXISTS sensor;
DROP TABLE IF EXISTS sensor_type;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS role;
DROP TABLE IF EXISTS sensor_ticket
DROP TABLE IF EXISTS ticket_response

CREATE TABLE role (
    role_id INT IDENTITY(1,1) PRIMARY KEY,
    role_name NVARCHAR(100) NOT NULL
);

CREATE TABLE users (
    user_id INT IDENTITY(1,1) PRIMARY KEY,
    first_name NVARCHAR(100) NOT NULL,
    middle_name NVARCHAR(50) NULL,
    surname NVARCHAR(100) NOT NULL,
    street NVARCHAR(150) NOT NULL,
    city NVARCHAR(100) NOT NULL,
    postcode NVARCHAR(20) NOT NULL,
    email NVARCHAR(255) NOT NULL UNIQUE,
    phone_number NVARCHAR(20) NULL,
    password NVARCHAR(255) NOT NULL,    
    role_id INT NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role(role_id)
);

CREATE TABLE sensor_type (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE sensor (
    id INT IDENTITY(1,1) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    longitude DECIMAL(9,6) NOT NULL,
    latitude DECIMAL(8,6) NOT NULL,
    is_active BIT NOT NULL DEFAULT 1,
    sensor_type_id INT NOT NULL,
    firmware_version VARCHAR(100) NOT NULL,
    FOREIGN KEY (sensor_type_id) REFERENCES sensor_type(id)
);

CREATE TABLE setting_type (
    id INT IDENTITY(1,1) PRIMARY KEY,
    code VARCHAR(10) NOT NULL,
    name VARCHAR(100) NOT NULL,
    unit VARCHAR(10) NOT NULL,
    sensor_type_id INT NOT NULL,
    FOREIGN KEY (sensor_type_id) REFERENCES sensor_type(id)
);

CREATE TABLE settings (
    id INT IDENTITY(1,1) PRIMARY KEY,
    setting_type_id INT NOT NULL,
    sensor_id INT NOT NULL,
    minimum_value DECIMAL(6,2) NOT NULL,
    maximum_value DECIMAL(6,2) NOT NULL,
    current_value DECIMAL(6,2) NOT NULL,
    FOREIGN KEY (sensor_id) REFERENCES sensor(id),
    FOREIGN KEY (setting_type_id) REFERENCES setting_type(id)
);

INSERT INTO role (role_name) VALUES
('Administrator'),
('Environmental Scientist'),
('Operations Manager');

INSERT INTO users (
    first_name, middle_name, surname, street, city, postcode, email, phone_number, password, role_id
) VALUES

('James', 'Alexander', 'Smith', '45 Hilltop Rd', 'Edinburgh', 'EH1 1AA', 'j.smith@smartsense.com', '07111 123456', 'Password123!', 1),
('Sophia', 'Rose', 'Brown', '78 River Lane', 'Edinburgh', 'EH10 1XY', 's.brown@smartsense.com', '07122 234567', 'Password123!', 1),
('Liam', NULL, 'Wilson', '10 Meadow Park', 'Edinburgh', 'EH3 5DN', 'l.wilson@smartsense.com', '07133 345678', 'Password123!', 2),
('Emma', 'Grace', 'Taylor', '91 Ocean Drive', 'Edinburgh', 'EH1 4NE', 'e.taylor@smartsense.com', '07144 456789', 'Password123!', 2),
('Noah', NULL, 'Anderson', '32 Birch Grove', 'Edinburgh', 'EH1 1TH', 'n.anderson@smartsense.com', '07155 567890', 'Password123!', 2),
('Olivia', NULL, 'Clark', '17 West End', 'Glasgow', 'G11 6EY', 'o.clark@smartsense.com', '07166 678901', 'Password123!', 2),
('Ethan', NULL, 'Stewart', '88 Church St', 'Stirling', 'FK8 1LU', 'ethan.s@smartsense.com', '07177 789012', 'Password123!', 3),
('Isla', NULL, 'Walker', '54 Spring Ln', 'Glasgow', 'G31 5AN', 'i.walker@smartsense.com', '07188 890123', 'Password123!', 3),
('Mason', 'James', 'Paterson', '12 Elm Rd', 'Glasgow', 'G31 2AB', 'm.paterson@smartsense.com', '07199 901234', 'Password123!', 3),
('Ava', NULL, 'Grant', '73 Glen Ave', 'Edinburgh', 'EH1 1XP', 'a.grant@smartsense.com', '07200 012345', 'Password123!', 3);

-- Insert sensor_type data
SET IDENTITY_INSERT sensor_type ON;
INSERT INTO sensor_type(id, name) VALUES
(1, 'Air'),
(2, 'Water'),
(3, 'Weather');
SET IDENTITY_INSERT sensor_type OFF;

-- Insert sensor data
SET IDENTITY_INSERT sensor ON;
INSERT INTO sensor(id, name, longitude, latitude, is_active, sensor_type_id, firmware_version) VALUES
(100, 'Test Sensor 1', 55.937311, -3.173388, 1, 3, '1.0.0'),
(147, 'Test Sensor 2', 55.941703006439475, -3.194724823439316, 1, 2, '1.0.0'),
(243, 'Test Sensor 3', 55.946803, -3.294777, 1, 1, '1.0.0'),
(431, 'Test Sensor 4', 55.979452, -3.274524, 1, 1, '1.0.0');
SET IDENTITY_INSERT sensor OFF;

-- Insert setting_type data
SET IDENTITY_INSERT setting_type ON;
INSERT INTO setting_type(id, code, name, unit, sensor_type_id) VALUES
(1, 'ND', 'Nitrogen Dioxide', 'ppm', 1),
(2, 'SD', 'Sulphur Dioxide', 'ppm', 1),
(3, 'PM2.5', 'PM2.5 particulate matter', 'µg/m³', 1),
(4, 'PM10', 'PM10 particulate matter', 'µg/m³', 1),
(5, 'Temp', 'Temperature', '°C', 3),
(6, 'Hum', 'Humidity', '%', 3),
(7, 'WindSpd', 'Wind Speed', 'm/s', 3),
(8, 'WindDir', 'Wind Direction', '°', 3),
(9, 'Nit', 'Nitrate', 'mg/L', 2),
(10, 'Nit', 'Nitrite', 'mg/L', 2),
(11, 'Phos', 'Phosphate', 'mg/L', 2);
SET IDENTITY_INSERT setting_type OFF;

-- Insert settings data
SET IDENTITY_INSERT settings ON;
INSERT INTO settings(id, setting_type_id, sensor_id, minimum_value, maximum_value, current_value) VALUES
(1, 1, 243, 5.00, 75.00, 41.12),
(2, 2, 243, 1.00, 2.00, 1.66),
(3, 3, 243, 5.00, 7.00, 5.09),
(4, 4, 243, 5.00, 8.00, 5.76),
(5, 1, 431, 4.50, 70.00, 41.12),
(6, 2, 431, 0.90, 2.50, 1.66),
(7, 3, 431, 4.00, 8.00, 5.09),
(8, 4, 431, 4.00, 10.00, 5.76),
(9, 5, 100, -10.00, 40.00, 15.50),
(10, 6, 100, 0.00, 100.00, 50.00),
(11, 7, 100, 0.00, 100.00, 10.00),
(12, 8, 100, 0.00, 360.00, 180.00),
(13, 9, 147, 0.00, 100.00, 29.07),
(14, 10, 147, 0.00, 3.00, 1.33),
(15, 11, 147, 0.00, 1.00, 0.07);
SET IDENTITY_INSERT settings OFF;




CREATE TABLE ticket_status
(
    id           INT            IDENTITY(1,1) NOT NULL PRIMARY KEY,
    status_name  NVARCHAR(50)   NOT NULL
);

INSERT INTO ticket_status (status_name)
VALUES
  ('Open'),
  ('Under Investigation'),
  ('Closed');


CREATE TABLE sensor_ticket
(
    id                 INT            IDENTITY(1,1) NOT NULL PRIMARY KEY,
    sensor_id          INT            NOT NULL,
    issue_description  NVARCHAR(500)  NOT NULL,
    status_id          INT            NOT NULL,
    created_at         DATETIME2      NULL    DEFAULT SYSUTCDATETIME(),

    CONSTRAINT FK_sensor_ticket_sensor
       FOREIGN KEY(sensor_id)
       REFERENCES sensor(id)
       ON DELETE CASCADE,

);


CREATE TABLE ticket_response
(
    id          INT           IDENTITY(1,1)    NOT NULL PRIMARY KEY,
    ticket_id   INT           NOT NULL,
    status_id   INT           NULL,
    note        NVARCHAR(MAX) NULL,
    created_at  DATETIME2     NOT NULL DEFAULT (SYSUTCDATETIME()),

    -- foreign keys
    CONSTRAINT FK_ticket_response_sensor_ticket
       FOREIGN KEY(ticket_id)
       REFERENCES sensor_ticket(id)
       ON DELETE CASCADE
);


Alter the settings table to create cascade delete
-- 1) drop the old FK
ALTER TABLE dbo.settings
  DROP CONSTRAINT FK__settings__sensor__5070F446;

-- 2) add it back with ON DELETE CASCADE
ALTER TABLE dbo.settings
  ADD CONSTRAINT FK_Settings_Sensor
    FOREIGN KEY(sensor_id)
    REFERENCES dbo.sensor(id)
    ON DELETE CASCADE;


Insert tickets for sensors
INSERT INTO sensor_ticket (sensor_id, issue_description, status_id)
VALUES
  (243, 'Readings above threshold for 2 hours',           2),  
  (431, 'Intermittent connectivity detected',             2),  
  (100, 'Firmware version outdated',                      3),  
  (147, 'Physical damage to sensor on front panel',       1); 

Insert responses to tickets
INSERT INTO ticket_response (ticket_id, status_id, note)
VALUES
  -- Ticket #1 (sensor 243)
  (1, 2, 'Monitoring readings for 24h before recalibration'),  
  (1, 3, 'Calibration complete; readings back within normal range. To be monitored for 24 hours.'),

  -- Ticket #2 (sensor 431)
  (2, 2, 'Performed soft reset on sensor.'),  
  (2, 3, 'Battery pack replaced and verified.'),

  -- Ticket #3 (sensor 100)
  (3, 3, 'Firmware updated to v1.1.0 and verified.');

